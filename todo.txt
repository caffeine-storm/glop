tmckee:#26 gin.MouseEvents need to distinguish between left/middle/right
buttons

tmckee:#25 our timestamp code is scuffed in glop.cpp

tmckee:#24 gui.TextLine.next_text is never used; but is needed for detecting change-in-text in gui.TextEditLine

tmckee:#23 for X, we need to listen for MappingNotify events and
XRefreshKeyboardMapping() as needed
https://tronche.com/gui/x/xlib/utilities/keyboard/XRefreshKeyboardMapping.html

tmckee:#22 clicking the 'x' button on a window doesn't close it r.n. We need to
detect a "close message" or smth in glop.cpp.

tmckee:#20 make each EventGroup have a mousex, mousey that widgets can see
during their 'Respond' phase. With that, we can remove the extra
'MouseListener' concept from gin.Input.

tmckee:#19 system/systemtest/click_test.go is flaky; running 'make
test-nocache' seems to repro more often than other invocation styles. Best
guess so far is that some competing/alternate window is occupying the target
point when we go to click.

tmckee:#18 the gin.MouseInput code doesn't support listener functions providing
'feedback'. The old input code would optionally synthsize 'consequence'
gin.Event instances. We might want to support the optional synthesis in the new
code for symmetry.

tmckee:#6 in gos/cgo_linux.go, mouse position needs to get un-stubbed

----

tmckee:#16 consider adding a Makefile recipe to generate a compile_commands.json file for the C++ code. Something like `go build -a -toolexec 'bear --' ./...`

tmckee:#15 refactor: move ShouldContainLog from render/rendertest/cmp_test.go to gloptest/

tmckee:#14 imgmanip/scale.go should sample neighbouring points when scaling by
non-integral amounts

tmckee:#13 sprite/sheet.go calls glu.Build2DMipmaps and passes 'gl.INT' as the
'type' parameter. But it _should_ be a 'gl.UNSIGNED_BYTE' because the data is
coming from an image.RGBA which uses one byte per component.

tmckee:#12 gui tests are flaky when not running under xvfb

tmckee:#7 installed multilib support to get the build going; is it necessary?
- sudo apt install gcc-multilib g++-multilib
- can check what's needed to build from inside a fresh ubuntu docker container

----

tmckee#3: port Haunts' "make update-appveyor-image" helper to glop

tmckee#4: we need to change Dictionary to use 'constant' geometry and support positioning by offset through shader-uniform-variables.

----

tmckee#5: opengl deprecated/removed GL_QUADS; we'll need to migrate away from
gl.QUADS

tmckee:#8 use type system to make initialization ordering constraints explicit
	- need to identify which modules/packages need this

tmckee:#10 in gos/linux/glop.cpp:
	case XK_slash: ki = '/'; break;
	case XK_space: ki = '/'; break;
	?? shouldn't that be a space, not a slash?

If windows is ok with giving up the main thread we should switch to doing
things with a Run() / Quit() mechanism instead of a for { Think() } mechanism.
Doing this would increase the number of mouse events on osx and would give
better resolution in the event of a long frame.

Make a way to test sprite stuff without needed opengl.

next bug: #27
